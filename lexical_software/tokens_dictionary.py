# DICTIONARY
DICTIONARY = {
        # keywords
        "REC": "REC_ENTRY",
        "SER": "END_EXEC",
        "INT": "DT_INT",
        "CHAR": "DT_CHAR",
        "FLOAT": "DT_FLOAT",
        "DOUBLE": "DT_DOUBLE",
        "SAVOR": "IF_STM",
        "STIR": "LP_STM",
        "BOOL": "DT_BOOL",
        "STR": "DT_STR",
        "STRUCT": "DT_STRUCT",
        "DO": "DO_STM",
        "WHILE": "WHILE_STM",
        # operators
        "=": "ASSIGN",
        "+=": "ADD_ASSIGN",
        "-=": "MINUS_ASSIGN",
        "*=": "MULTI_ASSIGN",
        "/=": "DIV_ASSIGN",
        "%=": "MODULO_ASSIGN",
        "+": "ADD",
        "-": "MINUS",
        "*": "MULTI",
        "/": "DIV",
        "%": "MODULO",
        "++": "INCRE",
        "--": "DECRE",
        "!": "LOGIC_NOT",
        "||": "LOGIC_OR",
        "&&": "LOGIC_AND",
        "==": "EQUAL_TO",
        "!=": "NOT_EQUAL_TO",
        ">": "GREATER_THAN",
        "<": "LESS_THAN",
        ">=": "GREAT_OR_EQUAL",
        "<=": "LESS_OR_EQUAL",
        # delimiters
        ";": "SEMICOLON",
        "(": "LPAREN",
        ")": "RPAREN",
        "[": "LBRAC",
        "]": "RBRAC",
        "{": "LCURLBRAC",
        "}": "RCURLBRAC",
        "//": "SINGLE_COM",
        "#": "MULTI_COM",
        " ": "SPACE",
        "'": "SQOUT",
        '"': "DQOUT",
        ":": "COLON",
        ",": "COM",
        "<<": "START_MARK",
        ">>": "END_MARK",
        # reserved words
        "DIGEST": "BREAK_STM",
        "MILD": "FALSE_STM",
        "OMIT": "CONTINUE_STM",
        "RELISH": "ELSE_STM",
        "SPICY": "TRUE_STM",
        # new features
        # "createTable": "CREATE_TAB",
        # "setCellValue": "SET_CELL_VAL",
        # "printTable": "PRINT_TAB",
        # "freeTable": "FREE_TAB",    
        # "QuotientRem": "QUO_REM",
        # "unitConvert": "UNIT_CONV"
    }